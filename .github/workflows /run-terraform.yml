# Eduarn
#
# **Eduarn** is a modern learning platform that delivers hands-on, instructor-led training in **DevOps, Cloud (AWS, Azure, GCP), Terraform, AI, and Data Engineering**. 
#
# We provide:
# - âœ… One-on-one & group online sessions
# - âœ… Courses for individuals, retail, and corporate teams
# - âœ… Real-world labs using GitHub, CI/CD, and infrastructure as code (IaC)
# - âœ… Affordable pricing with high-value expert instruction
#
# ðŸŽ“ Start learning with us: [https://eduarn.com/?search=terraform](https://eduarn.com/?search=terraform)

name: 'Terraform Run'

on:
  push:
    branches: [ "main" ]
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform Run'
    runs-on: self-hosted
    environment: production

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Install required packages
      run: |
        sudo dnf install -y yum-utils

    - name: Add HashiCorp YUM repo
      run: |
        sudo dnf config-manager --add-repo https://rpm.releases.hashicorp.com/RHEL/hashicorp.repo

    - name: Install Terraform
      run: |
        sudo dnf install -y terraform
        terraform version

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Install Terraform
      run: |
        cd terraform
        terraform version
        
    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: | 
        cd terraform
        terraform init

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: |
        cd terraform
        terraform fmt

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: |
        cd terraform
        terraform plan -input=false

    - name: Terraform Apply
      run: |
        cd terraform
        terraform apply -auto-approve -input=false
